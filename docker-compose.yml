
services:
  projectr.backend:
    build:
      context: ./src
      dockerfile: Dockerfile

    container_name: projectr-api
    depends_on:
      db:
        condition: service_healthy

    networks:
      - mynetwork

    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=projectr;Username=postgres;Password=password

      # - Google__Android=${Google__Android}
      # - Google__iOS=${Google__iOS}

      # - Jwt__Issuer=${Jwt__Issuer}
      # - Jwt__Audience=${Jwt__Audience}
      # - Jwt__Key=${Jwt__Key}

      # - Twilio__AccountSID=${Twilio__AccountSID}
      # - Twilio__AuthToken=${Twilio__AuthToken}
      # - Twilio__UseMock=${Twilio__UseMock}
      # - Twilio__OtpContentSid=${Twilio__OtpContentSid}

      # - Otp__UseMock=${Otp__UseMock}
      # - Otp__ExpiryInMin=${Otp__ExpiryInMin}

    ports:
      - "5000:5000"
      - "5001:5001"
     
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: projectr

    ports:
      - "4400:80"
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

    networks:
      - mynetwork

volumes:
  postgres_data:

networks:
  mynetwork:
